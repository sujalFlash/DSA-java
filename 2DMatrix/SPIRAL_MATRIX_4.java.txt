/*
Spiral matrix 4

m-no of rows
n-no. of columns
add linkedlist values in spiral fashion to matrix

*/

public class ListNode {
      int val;
      ListNode next;
      ListNode() {}
      ListNode(int val) { this.val = val; }
     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 }
 
class Solution {
    public int[][] spiralMatrix(int m, int n, ListNode head) {
        int [][]matrix=new int[m][n];
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
           matrix[i][j]=-1;
            }
        }
        int row_start=0;
        int row_end=m-1;
        int col_start=0;
        int col_end=n-1;
        ListNode temp=head;
     
        while(temp!=null&&col_start<=col_end&&row_start<=row_end){
     for(int j=col_start;j<=col_end&&temp!=null&&row_start<=row_end;j++){
         matrix[row_start][j]=temp.val;
         temp=temp.next;
     }
     row_start++;
     for(int i=row_start;i<=row_end&&temp!=null&&col_start<=col_end;i++){
     matrix[i][col_end]=temp.val;
     temp=temp.next;
     }
     col_end--;
     for(int k=col_end;k>=col_start&&temp!=null&&row_start<=row_end;k--){
        matrix[row_end][k]=temp.val;
        temp=temp.next;
     }
     row_end--;
     for(int p=row_end;p>=row_start&&temp!=null&&col_start<=col_end;p--){
        matrix[p][col_start]=temp.val;
        temp=temp.next;
     }
     col_start++;










        }           

      return matrix;



    }
}